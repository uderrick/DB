package bookstore.User;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

import com.mysql.jdbc.PreparedStatement;


@SuppressWarnings("serial")
public class Purchase extends javax.swing.JFrame {
	Connection con = null;
	Statement stmt = null;
    /**
     * Creates new form Purchase
     * @throws SQLException 
     */
    public Purchase() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws SQLException 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws SQLException {

    	
    	
    	try {
				Class.forName("com.mysql.jdbc.Driver").newInstance();
	} catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
	}
try {
					con = DriverManager.getConnection("jdbc:mysql://peace.handong.edu?autoReconnect=true&useSSL=false", "db21200221", "21200221");
	} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			}
	try {
			if (!con.isClosed())
					System.out.println("Successfully connected to MySQL server.");
		} catch (SQLException e) {
				// TODO Auto-generated catch block
					e.printStackTrace();
					}

						
								try {
										stmt = (Statement) con.createStatement();
									} catch (SQLException e) {
											// TODO Auto-generated catch block
										e.printStackTrace();
									}
									try {
												stmt.execute("use 21200221_db") ;
										} catch (SQLException e) {
												// TODO Auto-generated catch block
												e.printStackTrace();
											}
									
									stmt.executeQuery("SELECT ISBN,title,author,category,number FROM Stock");
	   	   						    ResultSet rs = stmt.getResultSet();
	   	   						    
	   	   						    
	   	   					 jTextArea1 = new javax.swing.JTextArea();
	   	   					 
	   	   						   
	   	   						    	
	   	   						while(rs.next()){
									jTextArea1.append(rs.getString("ISBN")+"/"+rs.getString("title")+"/"+rs.getString("author")+"/"+rs.getString("category")+"/"+rs.getString("number")+"\n");
	   	   						}
									
	   	   						   
	   	   						    
	   	   						    rs.close();
	   	   						    
        jScrollPane1 = new javax.swing.JScrollPane();
       
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        isbnField = new javax.swing.JTextField();
        buyBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("name");

        jLabel2.setText("ISBN");

        isbnField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnFieldActionPerformed(evt);
            }

			private void isbnFieldActionPerformed(ActionEvent evt) {
				// TODO Auto-generated method stub
				
			}
        });

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					buyBtnActionPerformed(evt);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                    .addComponent(isbnField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(buyBtn)
                        .addGap(48, 48, 48)
                        .addComponent(backBtn)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(isbnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyBtn)
                    .addComponent(backBtn))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

                                     

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {                                       
        // TODO add your handling code here:
    	PreparedStatement s = (PreparedStatement) con.prepareStatement("INSERT INTO Purchase(ISBN,customer) VALUES(?,?)");
    	
    	
    	//con.setAutoCommit(false);
		s.setString(1, isbnField.getText());
		s.setString(2, nameField.getText());
		
		s.executeUpdate();
		
	
				

		
		stmt.executeUpdate("delimiter // "+
				"DROP TRIGGER IF EXISTS  numberchange1;  \n"+
				 "CREATE TRIGGER numberchange1  \n"
				
				+ "BEFORE INSERT ON Purchase  \n"
				+ "FOR EACH ROW  \n"
				
				+ "BEGIN  \n"
				+ "UPDATE Stock "
				
				+ "SET "
				+ "number = number - 1 "
				+ "where ISBN = "+isbnField.getText()+";"
		
				+ " END;//"
				
	
);
		
		
		stmt.executeUpdate("delimiter //"+
				"DROP TRIGGER IF EXISTS  Purchasenumberchange2;  \n"+
				"CREATE TRIGGER numberchange2 \n"
				
				+ "AFTER INSERT ON Stock  \n"
				+ "FOR EACH ROW  \n"
				+ "BEGIN  \n"
			
				
						+ " UPDATE DailyReport "
						+ "SET "
					
						+ " number = number + 1 "
						+ "where title = '(Select title from Stock where ISBN = " +isbnField.getText()+")';"
						
				+ " END;//"
				
	
				);


		
		//con.commit();
		//con.setAutoCommit(true);
		
	
		//트랜잭션과 트리거 부분. Stock에서 재고 1빼주고 + DailyReport에서 재고1추가
		
		s.close();
		
		
		JOptionPane.showMessageDialog(null, "Buy Success");
		
    }                                      

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    	this.setVisible(false);
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
					new Purchase().setVisible(true);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton backBtn;
    private javax.swing.JButton buyBtn;
    private javax.swing.JTextField isbnField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nameField;
    // End of variables declaration                   
}
